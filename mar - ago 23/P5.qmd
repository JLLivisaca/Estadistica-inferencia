---
title: "Datos"
format: docx
editor: visual
---

```{r}
#función de distribución de probabilidad
dbinom(3,56,0.01)

```

```{r}
# integrar una funcoión 
dx = function(x){
  x^2 *5
}
x= 0:100
dx(x)


```

```{r}
# acceso a la data

data = read.csv("data.csv")
```

```{r}
# binomial negativa 
library
nbinom(2,3,4)
dgeom(x=124, prob=0.01)

```

```{r}

x= 0:18 
plot(x= x, y= dbinom(x=x, 50, 0.01), 
     type= "h", lwd=6, las=2)

x= 0:18 
plot(x= x, y= pbinom(x=x, 50, 0.01), 
     type= "h", lwd=6, las=2)

```

```{r}

(f1= dbinom(2, 50, 0.01))
(f= pbinom(2,50,0.01))
qbinom(0.5,50, prob=0.2)
dnbinom(9,10,0.3)
x= 1:10
dnbinom(x=6, size=4, prob=0.3)  # X son los fracasos, size son los éxitos
dnbinom(x=3, size=2, prob=0.3)  # X son los fracasos, size son los éxitos
x=0:5
dgeom(x=x,0.2)
(c=cumsum(dgeom(x=x,0.2)))

(f=pgeom(q=5,0.2))
```

```{r}
sum(dbinom(x=0:8,15,0.2))
```

```{r}
dpois(5,4.5)
```

```{r}


fn1 = function(z){
  (1/sqrt(2*pi))* exp(-0.5*(z^2))
  
}
integrate(fn1,0,3)
1-dnorm(1,mean=0,sd=1)

pnorm(1.45,mean=0,sd=1, lower.tail = T)

qnorm(0.9264707)
z=1.33
fn1(z)
integrate(fn1,0, 1)
fn1(-2.33)

```

```{r}
dhyper(5,15,5,10)
m <- 9; n <- 6; k <- 5 # m es el número de fracasos, n es el número de éxito, y k es la muestra aleatoria
x <- 0:(k)
dhyper(x, m, n, k)
```

```{r}
r=pnorm(c(0,2.17),mean=0,sd=1, lower.tail=T)

r[2]-r[1]

r=pnorm(c(0,1),mean=0,sd=1, lower.tail=T)
r[2]-r[1]

r=pnorm(c(-2.5,0),mean=0,sd=1, lower.tail=T)
r[2]-r[1]

r=pnorm(c(-2.5,2.5),mean=0,sd=1, lower.tail=T)
r[2]-r[1]

```

```{r}
1-pexp(6, 1/4)

x= 0:10

plot(pnorm(x, 1/lamda), type="l")
exp1 = function(x, lamda){
  0.25* exp(-x/lamda)
}
x=0:100
lamda=seq(0,1,0.1)

exp1(x,lamda)

curve(exp1(x,lamda))

integrate(exp1, 0,6)

qexp(0.7768698,1/4)

pexp(6,1/4)
lamda= 1/x
plot(pexp(x, lamda), type="l")

pexp(4, 1, lower.tail = F)
qexp(0.01831564, 1, lower.tail = F)
p= pexp(c(5,2), 1)
1-pexp(75000, 0.00004)
pexp(75000, 0.00004, lower.tail = F)
p[1]-p[2]

1/25000

gamma(6)
1/0.01
```

```{r}
library(ggplot2)
library(dplyr)
data(midwest)
midwest <- midwest %>%
  select(county, state, poptotal, popdensity, percwhite, percblack, percamerindan, percasian, percother, area) %>%
  #filter(!is.na(poptotal), !is.na(popwhite)) %>%
  mutate_at(vars(percwhite:percother), ~replace_na(., 0))
ggplot(midwest, aes(x = medianage, y = Poptotal, fill = factor(ifelse(medianage < 37.5, "Male", "Female")))) +
  geom_bar(stat = "identity", position = "identity") +
  scale_fill_manual(values = c("#619CFF", "#FF6161")) +
  labs(title = "Population Pyramid", x = "Median Age", y = "Population", fill = "") +
  coord_flip()
```

```{r}
acum = function(x) {
 f=function(y) { (3*y^(-4))
}
resultado <- integrate(f, lower = 1, upper = x)$value
#eturn(resultado)
}
1-acum(2)
```

```{r}
#A
#declaro la funcion
fx=function(X){
1/X^4
}
m=integrate(fx,1,Inf)
k=1/m$value
k

```

```{r}
fx=function(x){(1/x^4)}
fx1=integrate(fx,1,Inf)
```
